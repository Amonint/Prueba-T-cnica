version: '3.8'

services:
  # Development Backend with hot reload
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: mini-asistente-backend-dev
    ports:
      - "8000:8000"
    environment:
      # Google GenAI (API Key) Configuration
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-AIzaSyAK5olZHZd56D-DHZ769d_CMqwcmINRCkU}
      - LOCATION=${LOCATION:-us-central1}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.0-flash-exp}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-models/text-embedding-004}
      # Application Configuration
      - DEBUG=true
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS:-pdf,txt}
      - MAX_FILES=${MAX_FILES:-10}
      - VECTOR_STORE_PATH=/app/data/vectors
      - DOCUMENTS_PATH=/app/data/documents
      - FRONTEND_URL=http://localhost:3000
      - BACKEND_URL=http://localhost:8000
      - CHUNK_SIZE=4000
      - CHUNK_OVERLAP=200
      - SIMILARITY_THRESHOLD=0.4
      - SEARCH_LIMIT=5
    volumes:
      - ./backend:/app
      - backend_data_dev:/app/data
      - backend_uploads_dev:/app/uploads
    restart: unless-stopped
    networks:
      - mini-asistente-dev-network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]

  # Development Frontend with hot reload
  frontend:
    image: node:18-alpine
    container_name: mini-asistente-frontend-dev
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=
      - WATCHPACK_POLLING=true
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - mini-asistente-dev-network
    command: sh -c "npm install && npm run dev"

  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: mini-asistente-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    restart: unless-stopped
    networks:
      - mini-asistente-dev-network
    command: redis-server --appendonly yes

volumes:
  backend_data_dev:
    driver: local
  backend_uploads_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  mini-asistente-dev-network:
    driver: bridge
